// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebServer.Data;

#nullable disable

namespace WebServer.Migrations
{
    [DbContext(typeof(StorageContext))]
    [Migration("20220601085349_NewMigration1")]
    partial class NewMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebServer.Data.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<string>("DateEnd")
                        .HasColumnType("text")
                        .HasColumnName("date_end");

                    b.Property<string>("DateStart")
                        .HasColumnType("text")
                        .HasColumnName("date_start");

                    b.Property<string>("Negotiator")
                        .HasColumnType("text")
                        .HasColumnName("negotiator");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_clients");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("WebServer.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Date")
                        .HasColumnType("text")
                        .HasColumnName("date");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_name");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("size");

                    b.Property<int>("SupplyId")
                        .HasColumnType("integer")
                        .HasColumnName("supply_id");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("SupplyId")
                        .HasDatabaseName("ix_products_supply_id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("WebServer.Data.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_suppliers");

                    b.ToTable("suppliers", (string)null);
                });

            modelBuilder.Entity("WebServer.Data.Models.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("date");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("division");

                    b.Property<int?>("SupplierId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("supplier_id");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("time");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_supplies");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ix_supplies_client_id");

                    b.HasIndex("SupplierId")
                        .HasDatabaseName("ix_supplies_supplier_id");

                    b.ToTable("supplies", (string)null);
                });

            modelBuilder.Entity("WebServer.Data.Models.Product", b =>
                {
                    b.HasOne("WebServer.Data.Models.Supply", "Supply")
                        .WithMany("Products")
                        .HasForeignKey("SupplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_supplies_supply_id");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("WebServer.Data.Models.Supply", b =>
                {
                    b.HasOne("WebServer.Data.Models.Client", "Client")
                        .WithMany("Supplies")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_supplies_clients_client_id");

                    b.HasOne("WebServer.Data.Models.Supplier", "Supplier")
                        .WithMany("Supplies")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_supplies_suppliers_supplier_id");

                    b.Navigation("Client");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WebServer.Data.Models.Client", b =>
                {
                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("WebServer.Data.Models.Supplier", b =>
                {
                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("WebServer.Data.Models.Supply", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
