@page "/Supply/{SupplyId}"
@using Blazor.Services
@using System.Linq
@using Blazor.Data.Models

@if (CurrentSupply != null)
{
    <div class="container-fluid mr-3">
        <div class="row">
            <!-- Left panel -->
        <div class="col-2">
                <nav class="navbar my-4 mx-2 px-2 bg-my-style border rounded">
                    <ul class="navbar-nav">
                        <li class="nav-item my-1">
                            @foreach(var item in sortParams)
                            {
                                <label class="btn btn-bg" @onclick="() => Refresh(item)">
                                    <input type="radio" name="question1" /> @item
                                </label>
                            }
                        </li>
                    </ul>
                </nav>

                <nav class="navbar my-4 mx-2 px-2 bg-my-style border rounded">
                    <h4 class="mx-auto">Доступные размеры</h4>
                    <!-- Links -->
                <ul class="navbar-nav">
                        @foreach (var size in CurrentSupply.Products.Select(pr => pr.Size).Distinct().ToList())
                        {
                            <li class="nav-item my-1">
                                <label class="btn btn-bg">
                                    <input type="checkbox" name="options" id="option1"
                                    @onchange="eventArgs => {CheckboxSizesClicked(size, eventArgs.Value); }" checked> 
                                    <text>@size</text>
                                </label>
                            </li>
                        }
                    </ul>
                </nav>

                <nav class="navbar my-4 mx-2 px-2 bg-my-style border rounded">
                    <h4 class="mx-auto">Доступные цвета</h4>
                    <ul class="navbar-nav">
                        @foreach (var color in CurrentSupply.Products.Select(pr => pr.Color).Distinct().ToList())
                        {
                            <li class="nav-item my-1">
                                <label class="btn btn-bg">
                                    <input type="checkbox" name="options" id="option1"
                                    @onchange="eventArgs => {CheckboxColorClicked(color, eventArgs.Value); }" checked>
                                    <text>@color</text>
                                </label>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
            <div class="col-8 text-center">
                <h1>@Header</h1>
                <div class="container">
                    <table class="table table-my-style my-3 mx-auto" id="supplies-table">
                        <thead class="thead-my-style">
                            <tr>
                                <th class="py-auto" scope="row">#</th>
                                <th class="py-auto" scope="row">Товар</th>
                                <th class="py-auto" scope="row">Размер</th>
                                <th class="py-auto" scope="row">Цвет</th>
                                <th class="py-auto" scope="row">Количество</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in products)
                            {
                                <tr>
                                    <td class="py-auto" scope="row">@product.Id</td>
                                    <td class="py-auto" scope="row">@product.ProductName</td>
                                    <td class="py-auto" scope="row">@product.Size</td>
                                    <td class="py-auto" scope="row">@product.Color</td>
                                    <td class="py-auto" scope="row">@product.Number</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-2 text-center">
            </div>
        </div>
    </div>
}
else
{
    <h1>Loading...</h1>
}

@code {
    [Parameter]
    public string SupplyId { get; set; }
    public List<Data.Models.Product> Products { get; set; }
    public Data.Models.Supply? CurrentSupply { get; set; }

    public string Header { get; set; }

    [Inject]
    private ISupplyProvider supplyProvider { get; set; }

    protected async override Task OnInitializedAsync()
    {
        CurrentSupply = await supplyProvider.GetOne(Int32.Parse(SupplyId));

        Header = "Поставка от " + CurrentSupply.Supplier.CompanyName + " от " + CurrentSupply.Date;
        products = CurrentSupply.Products.ToList();
        chosenSizes = CurrentSupply.Products.Select(pr => pr.Size).Distinct().ToList();
        chosenColors = CurrentSupply.Products.Select(pr => pr.Color).Distinct().ToList();
        Console.WriteLine(CurrentSupply);
        base.OnInitialized();
    }

    // Сортировка
    private async Task Refresh(string param)
    {
        if(param == sortParams[0])
            products = CurrentSupply.Products.OrderBy(pr => pr.Color).ToList();
        else if(param == sortParams[1])
            products = CurrentSupply.Products.OrderByDescending(pr => pr.Size).ToList();
    }

    public List<string> sortParams = new List<string>() { "по размеру", "по цвету"}; 

    public List<Data.Models.Product> products = new List<Data.Models.Product>();

    public List<string> chosenColors = new List<string>();
    public List<string> chosenSizes = new List<string>();
    void CheckboxSizesClicked(string size, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            if (!chosenSizes.Contains(size))
            {
                chosenSizes.Add(size);
            }
        }
        else
        {
            if (chosenSizes.Contains(size))
            {
                chosenSizes.Remove(size);
            }
        }

        products = CurrentSupply.Products.Where(pr => chosenSizes.Contains(pr.Size)).ToList();
    }

    void CheckboxColorClicked(string color, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            if (!chosenColors.Contains(color))
            {
                chosenColors.Add(color);
            }
        }
        else
        {
            if (chosenColors.Contains(color))
            {
                chosenColors.Remove(color);
            }
        }

        products = CurrentSupply.Products.Where(pr => chosenColors.Contains(pr.Color)).ToList();
    }
}
