@page "/Supply/{SupplyId}"
@using Blazor.Services
@using System.Linq
@using Blazor.Data.Models

@if(CurrentSupply != null)
{
<div class="container-fluid mr-3">
	<div class="row">
	<!-- Left panel -->
		<div class="col-2">
			<nav class="navbar my-4 mx-2 px-2 bg-my-style border rounded">
				<ul class="navbar-nav">
				<li class="nav-item">
					<label class="btn btn-bg my-1">
						<input type="radio" @bind-value="SortParametr" @onclick="SortParamChange" 
						name="options" 
						id="option1" checked=@SortParametr> по размеру
					</label>
				</li>
				<li class="nav-item">
					<label class="btn btn-bg my-1">
						<input type="radio" name="question1" value="@SortParametr"/> по цвету
					</label>
				</li>
				</ul>
			</nav>

			<nav class="navbar my-4 mx-2 px-2 bg-my-style border rounded">
				<h4 class="mx-auto">Доступные размеры</h4>
				<!-- Links -->
				<ul class="navbar-nav">
					<li class="nav-item my-1">
						<label class="btn btn-bg">
							<input type="checkbox" name="options" id="option1"> <text>Все</text>
						</label>
					</li>
					@foreach(var size in CurrentSupply.Products.Select(pr => pr.Size).Distinct().ToList())
					{
						<li class="nav-item my-1">
							<label class="btn btn-bg">
								<input type="checkbox" name="options" id="option1"> <text>@size</text>
							</label>
						</li>
					}
				</ul>
			</nav>
	
			<nav class="navbar my-4 mx-2 px-2 bg-my-style border rounded">
				<h4 class="mx-auto">Доступные цвета</h4>
				<ul class="navbar-nav">
					@foreach(var color in CurrentSupply.Products.Select(pr => pr.Color).Distinct().ToList())
					{
						<li class="nav-item my-1">
							<label class="btn btn-bg">
								<input type="checkbox" name="options" id="option1"> <text>@color</text>
							</label>
						</li>
					}
				</ul>
			</nav>
		</div>
		<div class="col-8 text-center">
			<h1>@Header</h1>
			<div class="container">
				<table class="table table-my-style my-3 mx-auto" id="supplies-table">
					<thead class="thead-my-style">
						<tr>
							<th class="py-auto" scope="row">#</th>
							<th class="py-auto" scope="row">Товар</th>
							<th class="py-auto" scope="row">Размер</th>
							<th class="py-auto" scope="row">Цвет</th>
							<th class="py-auto" scope="row">Количество</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var product in CurrentSupply.Products)
						{
						<tr>
							<td class="py-auto" scope="row">@product.Id</td>
							<td class="py-auto" scope="row">@product.ProductName</td>
							<td class="py-auto" scope="row">@product.Brand</td>
							<td class="py-auto" scope="row">@product.Color</td>
							<td class="py-auto" scope="row">@product.Number</td>
						</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		<div class="col-2 text-center">
		</div>
	</div>
</div>
}
else
{
	<h1>Loading...</h1>
}

@code {
	[Parameter]
	public string SupplyId { get; set; }
	public List<Data.Models.Product> Products { get; set; }
	public Data.Models.Supply? CurrentSupply { get; set; }

	public string Header { get; set; }
	public bool SortParametr { get; set; }

	[Inject]
	private ISupplyProvider supplyProvider { get; set; }
	protected async override Task OnInitializedAsync()
	{
		CurrentSupply = await supplyProvider.GetOne(Int32.Parse(SupplyId));
		Header = "Поставка от " + CurrentSupply.Supplier.CompanyName + " от " + CurrentSupply.Date;
		Products = CurrentSupply.Products.ToList();
		Console.WriteLine(CurrentSupply);
		base.OnInitialized();
	}

	protected async Task SortParamChange()
	{
		if(SortParametr)
		{
			Products = Products.OrderBy(pr => pr.Size).ToList();
		}
		else
		{
			Products = Products.OrderBy(pr => pr.Color).ToList();
		}
	}
}
