@using Blazor.Data
@using Blazor.Services

<div class="container-fluid pb-3 text-center">
    <h1>Новая поставка</h1>
    <div class="container-fluid">
        <form>
            <div class="form-row justify-content-center">
                <div class="form-group col-2">
                    <label for="inputAddress">Тип поставки</label>
                    <select id="inputState" class="form-control" @bind-Value="@type" @bind-Value:event="onchange">
                        <option selected>Загрузка</option>
                        <option>Отгрузка</option>
                    </select>
                </div>
                <div class="form-group col-3">
                    <label for="inputCity">Поставщик</label>
                    <select id="inputState" class="form-control">
                        @foreach (var supplier in Suppliers)
                        {
                            <option>@supplier</option>
                        }
                    </select>
                </div>
                <div class="form-group col-1">
                    <label for="inputState">День</label>
                    <select id="inputState" class="form-control" @bind-Value="@userDate.Day" @bind-Value:event="onchange">
                        <option selected>@currentDate.Day</option>
                        @for (var i = currentDate.Day + 1; i < currentDate.AmountOfDayInMonth + 1; i++)
                        {
                            <option>@i</option>
                        }
                    </select>
                </div>
                <div class="form-group col-1">
                    <label for="inputState">Месяц</label>
                    <select id="inputState" class="form-control" @bind-Value="@userDate.Month" @bind-Value:event="onchange">
                        @foreach (var month in Enums.Months)
                        {
                            <option>@month</option>
                        }
                    </select>
                </div>
                <div class="form-group col-1">
                    <label for="inputState">Год</label>
                    <select id="inputState" class="form-control" @bind-Value="@userDate.Year" @bind-Value:event="onchange">
                        <option selected>@currentDate.Year</option>
                        @for (var i = currentDate.Year + 1; i < currentDate.Year + 10; i++)
                        {
                            <option>@i</option>
                        }
                    </select>
                </div>
                <div class="form-group col-1">
                    <label for="inputZip">Время</label>
                    <select id="inputState" class="form-control" @bind-Value="@Time" @bind-Value:event="onchange">
                        @for (var i = currentDate.StartOfDay; i < currentDate.EndOfDay; i++)
                        {
                            <option>@i:00</option>
                            <option>@i:30</option>
                        }

                    </select>
                </div>
            </div>
        </form>
        <table class="table table-my-style my-3 mx-auto">
            <thead class="thead-my-style">
                <tr>
                    <th class="py-auto" scope="row">#</th>
                    <th class="py-auto" scope="row">Товар</th>
                    <th class="py-auto" scope="row">Размер</th>
                    <th class="py-auto" scope="row">Цвет</th>
                    <th class="py-auto" scope="row">Количество</th>
                    <th class="py-auto" scope="row">Цена</th>
                    <th class="py-auto" scope="row">Отдел</th>
                    <th class="py-auto" scope="row">Тип</th>
                    <th class="py-auto" scope="row">Поставщик</th>
                    <th class="py-auto" scope="row">Дата</th>
                    <th class="py-auto" scope="row">Время</th>
                </tr>
            </thead>
            <tbody>
                @if (newSupply.Products != null)
                {
                    @foreach (var product in newSupply.Products)
                    {
                        <tr>
                            <th>@product.Id</th>
                            <th>@product.ProductName</th>
                            <th>@product.Size</th>
                            <th>@product.Color</th>
                            <th>@product.Number</th>
                            <th>@product.Price</th>
                            <th>@newSupply.Division</th>
                            <th>@newSupply.Type</th>
                            <th>@newSupply.Supplier</th>
                            <th>@newSupply.Date</th>
                            <th>@newSupply.Time</th>
                        </tr>
                    }

                }
            </tbody>
        </table>
        <button type="submit" class="btn btn-bg">Сохранить</button>
    </div>
    <div class="row mt-4">
        <div class="col-3">
        </div>
        <div class="col-6 text-center">
            <form>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="inputEmail4">Общий код товара</label>
                        <input type="text" class="form-control" id="inputEmail4" placeholder="Код" @bind-Value="@newProduct.ProductName" @bind-Value:event="onchange">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="inputPassword4">Размер</label>
                        <input type="text" class="form-control" id="inputPassword4" placeholder="Размер" @bind-Value="@newProduct.Size" @bind-Value:event="onchange">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="inputAddress">Цвет</label>
                        <input type="text" class="form-control" id="inputAddress" placeholder="Цвет" @bind-Value="@newProduct.Color" @bind-Value:event="onchange">
                    </div>

                </div>

                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="inputAddress2">Количество</label>
                        <input type="text" class="form-control" id="inputAddress2" placeholder="Количество" @bind-Value="@newProduct.Number" @bind-Value:event="onchange">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="inputAddress">Цена</label>
                        <input type="text" class="form-control" id="inputAddress" placeholder="Цена" @bind-Value="@newProduct.Price" @bind-Value:event="onchange">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="inputAddress2">Отдел</label>
                        <select id="inputState" class="form-control" @bind-Value="@newSupply.Division" @bind-Value:event="onchange">
                            <option selected>1</option>
                            @for (var i = 2; i < Enums.amountOfDivisions + 1; i++)
                            {
                                <option>@i</option>
                            }
                        </select>
                    </div>
                </div>
                <button type="submit" class="btn btn-bg" @onclick="@AddProduct">Добавить товар</button>
            </form>
        </div>
        <div class="col-3">
        </div>
    </div>
</div>
@code {
    private Blazor.Data.Models.Supply newSupply = new Data.Models.Supply();
    private List<string> Suppliers = new List<string>();
    private List<string> Clients = new List<string>();
    private Date currentDate = new Date();
    private Date userDate = new Date();
    private string type = "Загрузка";
    private string Time;
    private int Division;
    private Blazor.Data.Models.Product newProduct = new Data.Models.Product();

    [Inject]
    private IClientProvider clientProvider { get; set; }
    [Inject]
    private ISupplierProvider supplierProvider { get; set; }
    [Inject]
    private ISupplyProvider supplyProvider { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Suppliers = await supplierProvider.GetAllNames();
        Clients = await clientProvider.GetAllNames();
    }

    private void AddProduct()
    {

    }
}
